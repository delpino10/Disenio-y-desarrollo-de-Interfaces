body{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: minmax(100px, 200px);
}

/* perspective-origin values (unique per example) */
.po-tl {
    perspective-origin: top left;
}
.po-tm {
    perspective-origin: top;
}
.po-tr {
    perspective-origin: top right;
}
.po-ml {
    perspective-origin: left;
}
.po-mm {
    perspective-origin: 50% 50%;
}
.po-mr {
    perspective-origin: right;
}
.po-bl {
    perspective-origin: bottom left;
}
.po-bm {
    perspective-origin: bottom;
}
.po-br {
    perspective-origin: bottom right;
}
.po-200200neg {
    perspective-origin: -200% -200%;
}
.po-200200pos {
    perspective-origin: 200% 200%;
}
.po-200200 {
    perspective-origin: 200% -200%;
}

/* Define the container div, the cube div, and a generic face */
.container {
    width: 100px;
    height: 100px;
    margin: 24px;
    border: none;
    grid-column: 2/3;
    grid-row: 2 /3;
}

.cube {
    width: 100%;
    height: 100%;
    perspective: 100px;
    transform-style: preserve-3d;
}

.face {
    display: block;
    position: absolute;
    width: 100px;
    height: 100px;
    border: none;
    line-height: 100px;
    font-size: 100px;
    color: white;
    text-align: center;
}

/* Define each face based on direction */

.back {
    background: rgb(255 255 255/ 100%);
    transform: rotateY(-180deg) translateZ(50px);
    /*box-shadow: 20px 20px 50px 15px grey;*/
}
.right {
    background: rgb(196 0 0 / 100%);
    transform: rotateY(90deg) translateZ(50px);
    box-shadow: -5px 0 20px 0 black inset;
}
.left {
    background: rgb(0 128 0 / 100%);
    transform: rotateY(-90deg) translateZ(50px);
    box-shadow: 5px 0 20px 0 black inset;
}
.top {
    background: rgb(0 0 255 / 100%);
    transform: rotateX(90deg) translateZ(50px);
    box-shadow: 0 5px 20px 0 black inset;
}
.bottom {
    background: rgb(234 190 63 / 100%);
    transform: rotateX(-90deg) translateZ(50px);
    box-shadow: 0 -5px 20px 0 black inset;
}

